/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface StTimepicker {
      'class': string;
      'clock24': boolean;
      'label': string;
      'name': string;
      'selected': string;
      'step': number;
    }
  }

  interface HTMLStTimepickerElement extends StencilComponents.StTimepicker, HTMLStencilElement {}

  var HTMLStTimepickerElement: {
    prototype: HTMLStTimepickerElement;
    new (): HTMLStTimepickerElement;
  };
  interface HTMLElementTagNameMap {
    'st-timepicker': HTMLStTimepickerElement;
  }
  interface ElementTagNameMap {
    'st-timepicker': HTMLStTimepickerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'st-timepicker': JSXElements.StTimepickerAttributes;
    }
  }
  namespace JSXElements {
    export interface StTimepickerAttributes extends HTMLAttributes {
      'class'?: string;
      'clock24'?: boolean;
      'label'?: string;
      'name'?: string;
      'selected'?: string;
      'step'?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;