/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


declare global {
  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;
  }
}



import {
  StTimepicker as StTimepicker
} from './components/st-timepicker/st-timepicker';

declare global {
  interface HTMLStTimepickerElement extends StTimepicker, HTMLStencilElement {
  }
  var HTMLStTimepickerElement: {
    prototype: HTMLStTimepickerElement;
    new (): HTMLStTimepickerElement;
  };
  interface HTMLElementTagNameMap {
    "st-timepicker": HTMLStTimepickerElement;
  }
  interface ElementTagNameMap {
    "st-timepicker": HTMLStTimepickerElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "st-timepicker": JSXElements.StTimepickerAttributes;
    }
  }
  namespace JSXElements {
    export interface StTimepickerAttributes extends HTMLAttributes {
      class?: string;
      clock24?: boolean;
      label?: string;
      name?: string;
      selected?: string;
      step?: number;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
